// Copyright 2023 Wizard Authors. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Implements a simple monitor that prints global reads/writes.
class GlobalsMonitor extends Monitor {
	var reads = Vector<u64>.new();
	var writes = Vector<u64>.new();

	def onParse(module: Module) {
		var mm = ModuleMonitor.new(module);
		for (i < module.globals.length) {
			var global = module.globals[i];
			var index = u31.!(global.global_index);
			reads.put(0);
			writes.put(0);
			mm.beforeGlobalRead(index, globalReadFn(_, index));
			mm.beforeGlobalWrite(index, globalWriteFn(_, index));
		}
	}
	def onFinish(i: Instance) {
		for (j < reads.length) {
			Trace.OUT.put3("global[%d]: #R=%d, #W=%d", j, reads[j], writes[j]).outln();
		}
	}

	private def globalReadFn(dynamicLoc: DynamicLoc, global_index: u31) -> Resumption {
		reads[global_index]++;
		return Resumption.Continue;
	}
	private def globalWriteFn(dynamicLoc: DynamicLoc, global_index: u31) -> Resumption {
		writes[global_index]++;
		return Resumption.Continue;
	}
}