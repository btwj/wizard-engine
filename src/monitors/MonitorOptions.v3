// Copyright 2022 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Parses and updates monitor options based on arguments.
component MonitorOptions {
	private var monitors: List<Monitor>;

	// Parse a command-line argument, configuring and updating monitors. Return {true}
	// if the argument was matched and parsed successfully.
	def parse(arg: string) -> bool {
		if (!Strings.startsWith(arg, "--monitors=")) return false;
		var s = 11;
		for (i = s; i < arg.length; i++) {
			if (arg[i] == ',') {
				addMonitor(arg, s, i);
				s = i + 1;	
			}
		}
		if (s < arg.length) addMonitor(arg, s, arg.length);
		return true;
	}
	private def addMonitor(arg: string, start: int, end: int) {
		var name = Arrays.range(arg, start, end);
		var args: string;

		for (i < name.length) {
			if (name[i] == '{' && name[name.length - 1] == '}') {
				args = Arrays.range(name, i + 1, name.length - 1);
				name = Arrays.range(name, 0, i);
			}
		}
		var m = MonitorRegistry.lookupName(name);
		if (m != null) {
			if (args != null) m.configure(args);
			monitors = List.new(m, monitors);
		}
	}
	// Get the monitors, if any, configured by the above.
	def getMonitors() -> List<Monitor> {
		return monitors;
	}
}
